
UTest({
	'await': function(){
		
		var await = A.assert.await('foo', 2);
		
		eq(A.assert.callbacks.length, 1);
		eq(A.assert.callbacks[0].count, 2);
		eq(A.assert.callbacks[0].name, 'foo');
		
		await();
		eq(A.assert.callbacks.length, 1);
		eq(A.assert.callbacks[0].count, 1);
		
		await();
		eq(A.assert.callbacks.length, 0);
	},
	
	'avoid': function(){
		var avoid = A.assert.avoid('foo', 1),
			error;
		
		is_(avoid, 'Function');
		avoid();
		
		try {
			avoid();
		} catch(e){
			
			has_(e.message, 'foo');
			error = e;
		}
		
		notEq_(error, null);
	}
	
});